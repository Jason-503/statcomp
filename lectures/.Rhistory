library(tidyverse)
library(boot)
library(coefplot)
library(modelr)
library(multcomp)
library(openintro)
expit= function(x) 1/(1+exp(-x)) #inverse of logit function
fitpred= data_grid(email, num_char, .model=fit) |>
add_predictions(fit) |>
mutate(predprob= expit(pred))
library(tidyverse)
library(boot)
library(coefplot)
library(modelr)
library(multcomp)
library(openintro)
install.packages("openintro")
library(tidyverse)
library(boot)
library(coin)
library(fivethirtyeight)
library(lmPerm)
library(ggpubr)
library(plyr)
source('../code/routines.R')
baseball= baseball[baseball$year >= 1990, ]
head(baseball)
bat.avg= function(data, indices=1:nrow(data)) {
sum(data[indices, "h"], na.rm=TRUE) /
sum(data[indices, "ab"], na.rm=TRUE)
}
bat.avg(baseball)
set.seed(12345)
B= 2000; n= nrow(baseball)
th= double(B)
for (b in 1:B) {
idx= sample(1:n, size=n, replace=TRUE)
th[b]= bat.avg(baseball, indices=idx)
}
quantile(th, probs=c(.025,0.975)) #Boostrap-based 95% CI
th= tibble(th)
ggplot(th, aes(x=th)) + geom_histogram(aes(y= ..density..)) + stat_overlay_normal_density(linetype='dashed')
ggplot(th, aes(sample=th)) + geom_qq() + geom_qq_line(col='red')
avgBoot= boot(data=baseball, statistic=bat.avg, R=2000)
summary(avgBoot)
quantile(avgBoot$t, probs=c(0.025,0.975))
data(mtcars)
dim(mtcars)
f= formula(mpg ~ cyl + disp + hp + drat + wt + qsec + vs + am)
fit= lm(f, data=mtcars)
coefSummary(fit)
mtcars.pred= tibble(mpg=mtcars$mpg, mpg_pred= predict(fit)) |>
mutate(res= mpg - mpg_pred)
